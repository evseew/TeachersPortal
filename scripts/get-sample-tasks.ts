#!/usr/bin/env ts-node
/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –∑–∞–¥–∞—á –∏–∑ —Ñ–æ—Ä–º Pyrus –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */

import { PyrusClientFactory } from '../lib/pyrus/client-factory'

async function getSampleTasks() {
  console.log('üîç –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –∑–∞–¥–∞—á –∏–∑ —Ñ–æ—Ä–º Pyrus...')
  
  try {
    const formsClient = PyrusClientFactory.createFormsClient()
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á –∏–∑ –∫–∞–∂–¥–æ–π —Ñ–æ—Ä–º—ã
    console.log('\nüìã –§–æ—Ä–º–∞ 2304918 (—Å—Ç–∞—Ä–∏—á–∫–∏):')
    let count = 0
    for await (const task of formsClient.iterRegisterTasks(2304918, { maxTasks: 3 })) {
      console.log(`  Task ID: ${task.id} - "${task.subject || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}"`)
      count++
      if (count >= 3) break
    }
    
    console.log('\nüìã –§–æ—Ä–º–∞ 792300 (–Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç):')
    count = 0
    for await (const task of formsClient.iterRegisterTasks(792300, { maxTasks: 3 })) {
      console.log(`  Task ID: ${task.id} - "${task.subject || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}"`)
      count++
      if (count >= 3) break
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error instanceof Error ? error.message : String(error))
  }
}

getSampleTasks()
