#!/usr/bin/env tsx
/**
 * –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ Pyrus API —Å keyset –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
 * –û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π Pyrus API v4
 * https://pyrus.com/en/help/api
 * 
 * –ó–∞–ø—É—Å–∫ (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è):
 * PYRUS_API_URL="..." PYRUS_LOGIN="..." PYRUS_SECURITY_KEY="..." npx tsx scripts/debug-pyrus-api.ts
 */

import { PyrusClientFactory } from '../lib/pyrus/client-factory'

async function debugPyrusAPI() {
  console.log('üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ Pyrus API (keyset –ø–∞–≥–∏–Ω–∞—Ü–∏—è)\n')
  
  const formsClient = PyrusClientFactory.createFormsClient()
  const baseClient = (formsClient as any).client || formsClient
  
  console.log('üìã –§–æ—Ä–º–∞ 2304918 - –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:')
  console.log('=' .repeat(70))
  
  // –î–µ–ª–∞–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ API (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å keyset pagination)
  const response1 = await (baseClient as any).get(
    'forms/2304918/register?item_count=200&include_archived=n&sort=id'
  )
  
  console.log('–û—Ç–≤–µ—Ç API:')
  console.log(`  tasks.length: ${response1?.tasks?.length || 0}`)
  
  if (response1?.tasks?.length > 0) {
    console.log(`  –ü–µ—Ä–≤–∞—è –∑–∞–¥–∞—á–∞ ID: ${response1.tasks[0].id}`)
    console.log(`  –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–¥–∞—á–∞ ID: ${response1.tasks[response1.tasks.length - 1].id}`)
    
    const lastTaskId = response1.tasks[response1.tasks.length - 1].id
    
    // –î–µ–ª–∞–µ–º –≤—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å —Å keyset —Ñ–∏–ª—å—Ç—Ä–æ–º
    console.log('\nüìã –§–æ—Ä–º–∞ 2304918 - –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (—Å keyset —Ñ–∏–ª—å—Ç—Ä–æ–º):')
    console.log('=' .repeat(70))
    console.log(`  –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–ª—å—Ç—Ä: id=lt.${lastTaskId}`)
    
    const response2 = await (baseClient as any).get(
      `forms/2304918/register?item_count=200&include_archived=n&sort=id&id=lt.${lastTaskId}`
    )
    
    console.log('–û—Ç–≤–µ—Ç API:')
    console.log(`  tasks.length: ${response2?.tasks?.length || 0}`)
    
    if (response2?.tasks?.length > 0) {
      console.log(`  –ü–µ—Ä–≤–∞—è –∑–∞–¥–∞—á–∞ ID: ${response2.tasks[0].id}`)
      console.log(`  –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–¥–∞—á–∞ ID: ${response2.tasks[response2.tasks.length - 1].id}`)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ ID —Å—Ç—Ä–æ–≥–æ –º–µ–Ω—å—à–µ
      const firstIdPage2 = response2.tasks[0].id
      if (firstIdPage2 < lastTaskId) {
        console.log(`  ‚úÖ Keyset —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: ${firstIdPage2} < ${lastTaskId}`)
      } else {
        console.log(`  ‚ùå –û—à–∏–±–∫–∞ keyset: ${firstIdPage2} >= ${lastTaskId}`)
      }
    } else {
      console.log('  ‚ÑπÔ∏è  –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—É—Å—Ç–∞—è - –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ')
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
  console.log('\nüîç –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ (–ø–µ—Ä–≤—ã–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤):')
  console.log('=' .repeat(70))
  console.log(JSON.stringify(response1, null, 2).slice(0, 1000) + '...')
}

debugPyrusAPI().catch(console.error)


