#!/usr/bin/env ts-node
/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ Pyrus
 * 
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
 * - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞—á –∏–∑ —Ñ–æ—Ä–º 2304918 –∏ 792300
 * - –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
 * - –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–¥–∞—á
 */

import { PyrusClientFactory } from '../lib/pyrus/client-factory'

async function testPaginationFix() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ Pyrus API\n')
  console.log('=' .repeat(70))
  
  try {
    const formsClient = PyrusClientFactory.createFormsClient()
    
    // –¢–µ—Å—Ç 1: –§–æ—Ä–º–∞ 2304918 (—Å—Ç–∞—Ä–∏—á–∫–∏)
    console.log('\nüìã –¢–µ—Å—Ç 1: –§–æ—Ä–º–∞ 2304918 (—Å—Ç–∞—Ä–∏—á–∫–∏)')
    console.log('-'.repeat(70))
    
    const seenIds2304918 = new Set<number>()
    let count2304918 = 0
    let duplicates2304918 = 0
    
    console.log('‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–¥–∞—á–∏...')
    
    for await (const task of formsClient.iterRegisterTasks(2304918, { 
      includeArchived: false,
      batchSize: 200 
    })) {
      count2304918++
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã
      if (seenIds2304918.has(task.id)) {
        duplicates2304918++
        console.warn(`‚ö†Ô∏è  –î—É–±–ª–∏–∫–∞—Ç –Ω–∞–π–¥–µ–Ω: task_id=${task.id}`)
      }
      seenIds2304918.add(task.id)
      
      // –ü—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 500 –∑–∞–¥–∞—á
      if (count2304918 % 500 === 0) {
        console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${count2304918} –∑–∞–¥–∞—á`)
      }
    }
    
    console.log('\n‚úÖ –§–æ—Ä–º–∞ 2304918 –∑–∞–≤–µ—Ä—à–µ–Ω–∞:')
    console.log(`   üìä –í—Å–µ–≥–æ –∑–∞–¥–∞—á: ${count2304918}`)
    console.log(`   üÜî –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID: ${seenIds2304918.size}`)
    console.log(`   ‚ö†Ô∏è  –î—É–±–ª–∏–∫–∞—Ç–æ–≤: ${duplicates2304918}`)
    
    // –¢–µ—Å—Ç 2: –§–æ—Ä–º–∞ 792300 (–Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç)
    console.log('\nüìã –¢–µ—Å—Ç 2: –§–æ—Ä–º–∞ 792300 (–Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç)')
    console.log('-'.repeat(70))
    
    const seenIds792300 = new Set<number>()
    let count792300 = 0
    let duplicates792300 = 0
    
    console.log('‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–¥–∞—á–∏...')
    
    for await (const task of formsClient.iterRegisterTasks(792300, { 
      includeArchived: false,
      batchSize: 200 
    })) {
      count792300++
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã
      if (seenIds792300.has(task.id)) {
        duplicates792300++
        console.warn(`‚ö†Ô∏è  –î—É–±–ª–∏–∫–∞—Ç –Ω–∞–π–¥–µ–Ω: task_id=${task.id}`)
      }
      seenIds792300.add(task.id)
      
      // –ü—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 500 –∑–∞–¥–∞—á
      if (count792300 % 500 === 0) {
        console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${count792300} –∑–∞–¥–∞—á`)
      }
    }
    
    console.log('\n‚úÖ –§–æ—Ä–º–∞ 792300 –∑–∞–≤–µ—Ä—à–µ–Ω–∞:')
    console.log(`   üìä –í—Å–µ–≥–æ –∑–∞–¥–∞—á: ${count792300}`)
    console.log(`   üÜî –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID: ${seenIds792300.size}`)
    console.log(`   ‚ö†Ô∏è  –î—É–±–ª–∏–∫–∞—Ç–æ–≤: ${duplicates792300}`)
    
    // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    console.log('\n' + '='.repeat(70))
    console.log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢')
    console.log('='.repeat(70))
    
    const totalTasks = count2304918 + count792300
    const totalDuplicates = duplicates2304918 + duplicates792300
    
    console.log(`\nüìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`)
    console.log(`   ‚Ä¢ –§–æ—Ä–º–∞ 2304918: ${count2304918} –∑–∞–¥–∞—á`)
    console.log(`   ‚Ä¢ –§–æ—Ä–º–∞ 792300: ${count792300} –∑–∞–¥–∞—á`)
    console.log(`   ‚Ä¢ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${totalTasks} –∑–∞–¥–∞—á`)
    console.log(`   ‚Ä¢ –í—Å–µ–≥–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: ${totalDuplicates}`)
    
    if (totalDuplicates === 0) {
      console.log('\nüéâ –£–°–ü–ï–•! –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ - –ø–∞–≥–∏–Ω–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!')
    } else {
      console.log(`\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï! –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${totalDuplicates} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤`)
    }
    
    // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –æ–∂–∏–¥–∞–µ–º—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ (–µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã)
    console.log('\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:')
    console.log('   1. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É?')
    console.log('   2. –í—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ ID (–Ω–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç–æ–≤)?')
    console.log('   3. –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫?')
    
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error instanceof Error ? error.message : String(error))
    console.error('\n–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:')
    console.error(error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏...\n')
testPaginationFix()
  .then(() => {
    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ')
    process.exit(0)
  })
  .catch((error) => {
    console.error('\n‚ùå –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π:', error)
    process.exit(1)
  })


