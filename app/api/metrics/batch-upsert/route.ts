import { NextRequest, NextResponse } from "next/server"
import { supabaseAdmin } from "@/lib/supabase/admin"
import { withAuth } from "@/lib/middleware/auth-middleware"
import { ScoreRecomputationService } from "@/lib/services/score-recomputation.service"

const batchUpsertHandler = async (request: NextRequest) => {
  try {
    const body = await request.json()
    const rows = Array.isArray(body) ? body : body?.rows
    const editorEmail = body?.editorEmail || "system@planetenglish.ru"
    if (!Array.isArray(rows)) {
      return NextResponse.json({ error: "Body must be array or {rows}[]" }, { status: 400 })
    }
    // –í—ã–∑—ã–≤–∞–µ–º RPC —Ñ—É–Ω–∫—Ü–∏—é (–æ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∏)
    const { error, data } = await supabaseAdmin.rpc("metrics_batch_upsert", {
      p_rows: rows,
      p_editor: editorEmail,
    })
    if (error) throw error

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ—Å—á–µ—Ç —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
    // –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –µ—Å–ª–∏ RPC —Ñ—É–Ω–∫—Ü–∏—è –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞
    const recomputationService = ScoreRecomputationService.getInstance()
    const recomputeResult = await recomputationService.recomputeIfNeeded('metrics-batch-upsert', {
      skipIfRecent: true,
      maxFrequency: 5000 // –ù–µ —á–∞—â–µ —á–µ–º —Ä–∞–∑ –≤ 5 —Å–µ–∫—É–Ω–¥
    })

    console.log(`üìä [API] batch-upsert: –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${data} –∑–∞–ø–∏—Å–µ–π, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ—Å—á–µ—Ç: ${recomputeResult.executed ? '–≤—ã–ø–æ–ª–Ω–µ–Ω' : '–ø—Ä–æ–ø—É—â–µ–Ω'}`)

    return NextResponse.json({ 
      affected: data ?? 0,
      recomputation: {
        executed: recomputeResult.executed,
        reason: recomputeResult.reason
      }
    })
  } catch (error: any) {
    console.error("/api/metrics/batch-upsert error", error)
    return NextResponse.json({ error: error.message ?? "Internal error" }, { status: 500 })
  }
}

// –ü—Ä–∏–º–µ–Ω—è–µ–º middleware —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
export const POST = withAuth({
  requireAuth: true,
  allowedRoles: ["Administrator", "Senior Teacher"]
})(batchUpsertHandler)


