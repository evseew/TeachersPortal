import { NextRequest, NextResponse } from "next/server"
import { PyrusUsersClient } from "@/lib/pyrus/client"
import { supabaseAdmin } from "@/lib/supabase/admin"
import { getOptimalAvatarUrl } from "@/lib/utils/avatar"
import { LeaderboardSyncService } from "@/lib/services/leaderboard-sync.service"
import { withAuth } from "@/lib/middleware/auth-middleware"
import { withErrorHandler } from "@/lib/middleware/api-error-handler"
import { withPerformanceMonitoring } from "@/lib/middleware/performance-monitor"

/**
 * –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤
 * 
 * POST /api/system/sync-users
 * 
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç:
 * 1. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Pyrus
 * 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤
 * 
 * –°—Ç—Ä–∞—Ç–µ–≥–∏—è:
 * - –í—Å–µ –Ω–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—é—Ç —Ä–æ–ª—å "Regular User"
 * - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ—Ç–æ–º –≤—Ä—É—á–Ω—É—é –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–æ–ª–∏
 * - –°–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—Ä–æ–ª–∏, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —Ñ–∏–ª–∏–∞–ª—ã)
 */
async function syncUsersHandler(request: NextRequest) {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Pyrus...')
    
    // 1. –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Pyrus
    const pyrusClient = new PyrusUsersClient()
    const pyrusUsers = await pyrusClient.getActiveMembers()
    
    if (pyrusUsers.length === 0) {
      return NextResponse.json({
        success: false,
        error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Pyrus'
      }, { status: 500 })
    }
    
    console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ ${pyrusUsers.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Pyrus`)
    
    // 2. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –ø–æ—Ä—Ç–∞–ª–∞
    const { data: currentUsers, error: fetchError } = await supabaseAdmin
      .from('profiles')
      .select('user_id, email, full_name, role, category, branch_id')
    
    if (fetchError) {
      throw fetchError
    }
    
    console.log(`üìä –¢–µ–∫—É—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ: ${currentUsers?.length || 0}`)
    
    const syncResults = {
      added: 0,
      updated: 0,
      unchanged: 0,
      errors: [] as string[]
    }
    
    // 3. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for (const pyrusUser of pyrusUsers) {
      try {
        const email = pyrusUser.email.toLowerCase()
        const fullName = `${pyrusUser.first_name || ''} ${pyrusUser.last_name || ''}`.trim() || email
        
        // –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const existingUser = currentUsers?.find(u => u.email.toLowerCase() === email)
        
        if (!existingUser) {
          // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL –∞–≤–∞—Ç–∞—Ä–∞
          const avatarUrl = getOptimalAvatarUrl(email, fullName, { 
            size: 64, 
            defaultType: 'generated' 
          })
          
          // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ–ª—å—é "Regular User"
          const { error: insertError } = await supabaseAdmin
            .from('profiles')
            .insert({
              email: email,
              full_name: fullName,
              role: 'Salesman', // –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º Salesman –≤–º–µ—Å—Ç–æ Regular User
              category: null,
              branch_id: null,
              avatar_url: avatarUrl
            })
          
          if (insertError) {
            throw insertError
          }
          
          syncResults.added++
          console.log(`‚ûï –î–æ–±–∞–≤–ª–µ–Ω: ${fullName} (${email})`)
          
        } else {
          // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∏–º—è, —Ä–æ–ª—å –∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ù–ï –¢–†–û–ì–ê–ï–ú
          const nameChanged = existingUser.full_name !== fullName
          
          if (nameChanged) {
            const { error: updateError } = await supabaseAdmin
              .from('profiles')
              .update({ full_name: fullName })
              .eq('user_id', existingUser.user_id)
            
            if (updateError) {
              throw updateError
            }
            
            syncResults.updated++
            console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω: ${fullName} (${email}) - –∏–∑–º–µ–Ω–µ–Ω–æ –∏–º—è`)
          } else {
            syncResults.unchanged++
          }
        }
        
      } catch (error: any) {
        const errorMsg = `–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ${pyrusUser.email}: ${error.message}`
        syncResults.errors.push(errorMsg)
        console.error(`‚ùå ${errorMsg}`)
      }
    }
    
    // 4. –ù–ï –£–î–ê–õ–Ø–ï–ú –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - —Ç–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º
    // –£–¥–∞–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–¥–∞—á–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    
    console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: –¥–æ–±–∞–≤–ª–µ–Ω–æ ${syncResults.added}, –æ–±–Ω–æ–≤–ª–µ–Ω–æ ${syncResults.updated}, –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ${syncResults.unchanged}`)
    
    // 5. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ä–∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–∞
    let leaderboardSyncResult = null
    try {
      console.log('üéØ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤ —á–µ—Ä–µ–∑ LeaderboardSyncService...')
      
      const syncService = new LeaderboardSyncService()
      const result = await syncService.syncTeacherData()
      
      if (result.success) {
        leaderboardSyncResult = {
          success: true,
          phantom_users_removed: result.phantomUsersRemoved,
          missing_teachers_added: result.missingTeachersAdded,
          teachers_processed: result.teachersInProfiles
        }
        console.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —á–µ—Ä–µ–∑ —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å')
        console.log(`üìä –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–Ω—Ç–æ–º–æ–≤: ${result.phantomUsersRemoved}, –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: ${result.missingTeachersAdded}`)
      } else {
        throw new Error(result.error || 'LeaderboardSyncService returned unsuccessful result')
      }
      
    } catch (leaderboardError: any) {
      console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤:', leaderboardError)
      leaderboardSyncResult = {
        success: false,
        error: leaderboardError.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤'
      }
    }
    
    return NextResponse.json({
      success: true,
      message: '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ',
      results: {
        totalPyrusUsers: pyrusUsers.length,
        added: syncResults.added,
        updated: syncResults.updated,
        unchanged: syncResults.unchanged,
        errors: syncResults.errors
      },
      leaderboard_sync: leaderboardSyncResult,
      timestamp: new Date().toISOString()
    })
    
  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error)
    throw error // Middleware –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –æ—à–∏–±–∫—É
  }
}

// –ü—Ä–∏–º–µ–Ω—è–µ–º middleware –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
export const POST = withAuth({
  requireAuth: true,
  allowedRoles: ['Administrator', 'Senior Teacher']
})(
  withErrorHandler(
    withPerformanceMonitoring(syncUsersHandler, '/api/system/sync-users'),
    'sync-users'
  )
)
